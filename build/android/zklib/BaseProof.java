// Code generated by gobind. DO NOT EDIT.

// Java class zklib.BaseProof is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java zklib
package zklib;

import go.Seq;

/**
 * PreviousProof object to encapsulate the behaviour of
doing setup just once, and then repeatedly
constructing and verifying proofs and
 */
public final class BaseProof implements Seq.Proxy {
	static { Zklib.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	public BaseProof() {
		this.refnum = __NewBaseProof();
		Seq.trackGoRef(refnum, this);
	}
	
	private static native int __NewBaseProof();
	
	BaseProof(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	// skipped field BaseProof.Ccs with unsupported type: github.com/consensys/gnark/constraint.ConstraintSystem
	
	// skipped field BaseProof.VerifyingKey with unsupported type: github.com/consensys/gnark/backend/groth16.VerifyingKey
	
	// skipped field BaseProof.ProvingKey with unsupported type: github.com/consensys/gnark/backend/groth16.ProvingKey
	
	// skipped method BaseProof.ComputeProof with unsupported parameter or return types
	
	// skipped method BaseProof.CreateBaseCaseWitness with unsupported parameter or return types
	
	public native void readKeys() throws Exception;
	public native void setupKeys() throws Exception;
	// skipped method BaseProof.VerifyProof with unsupported parameter or return types
	
	/**
	 * generate innerVK, innerPK, compiled circuit and save to disk
	 */
	public native void writeKeys() throws Exception;
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof BaseProof)) {
		    return false;
		}
		BaseProof that = (BaseProof)o;
		// skipped field BaseProof.Ccs with unsupported type: github.com/consensys/gnark/constraint.ConstraintSystem
		
		// skipped field BaseProof.VerifyingKey with unsupported type: github.com/consensys/gnark/backend/groth16.VerifyingKey
		
		// skipped field BaseProof.ProvingKey with unsupported type: github.com/consensys/gnark/backend/groth16.ProvingKey
		
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("BaseProof").append("{");
		return b.append("}").toString();
	}
}

